
// Grid
//––––––––––––––––––––––––––––––––––––––––––––––––––
.container {
  position: relative;
  box-sizing: border-box;
  width: $size__site-main;
  max-width: $size__site-main;
  padding: 0 $column-margin;
  margin: 0 auto;

  @include tablet {
    max-width: $width_tablet;
  }

  @include laptop {
    max-width: $width_laptop;
  }

  // @include desktop {
  //   max-width: $width_desktop;
  // }
}

.row {  
  margin: 0;

  @include phablet {
    margin-left: -$column-margin;
    margin-right: -$column-margin;
  }
}

// default column width before responsive layout kicks in
.column {
  width: 100%;
  float: left;
  box-sizing: border-box;
  padding-left: $column-margin;
  padding-right: $column-margin;
}


// Grid calculations 
// divide $size__site-main by $total-columns & loop through breakpoints to create responsive grid
//––––––––––––––––––––––––––––––––––––––––––––––––––

// Smallest devices
@for $column-width from 1 through $total-columns {
  .xs-#{$column-width} { 
    width: $size__site-main / $total-columns * $column-width;
  }
}

// Larger smartphones and small tablets
@include phablet {
  @for $column-width from 1 through $total-columns {
    .sm-#{$column-width} { 
      width: $size__site-main / $total-columns * $column-width;
    }
  }
}

// Tablets around iPad size
@include tablet {
  @for $column-width from 1 through $total-columns {
    .md-#{$column-width} { 
      width: $size__site-main / $total-columns * $column-width;
    }
  }
}

// Laptops and large tablets, also breakpoint for mobile nav
@include laptop {
  @for $column-width from 1 through $total-columns {
    .lg-#{$column-width} { 
      width: $size__site-main / $total-columns * $column-width;
    }
  }
}

// Desktop size and larger, uncomment if needed
// @include desktop {
//   @for $column-width from 1 through $total-columns {
//     .xl-#{$column-width} { 
//       width: $size__site-main / $total-columns * $column-width;
//     }
//   }
// }

// offests if you need them, just add relevant breakpoint
// @include desktop {
//   @for $column-width from 1 through $total-columns {
//     .offset-#{$column-width} { 
//       margin-left: $size__site-main / $total-columns * $column-width;
//     }
//   }
// }

// reset offset, add relevant breakpoint
// .reset { 
//   margin-left: 0;
// }

// makes wrap for main content area same width as grid columns
//––––––––––––––––––––––––––––––––––––––––––––––––––
.site-content {
  @extend .container;
}

// Clearing
//––––––––––––––––––––––––––––––––––––––––––––––––––
.container:after,
.row:after,
.u-cf {
  content: "";
  display: table;
  clear: both;
}
